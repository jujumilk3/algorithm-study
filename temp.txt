<h4>[프로그래머스/Level1/파이썬3(python3)] 약수의 개수와 덧셈</h4>
<h4>문제</h4>
<p>두 정수 <code class="inline">left</code>와 <code class="inline">right</code>가 매개변수로 주어집니다. <code class="inline">left</code>부터 <code class="inline">right</code>까지의 모든 수들 중에서, 약수의 개수가 짝수인 수는 더하고, 약수의 개수가 홀수인 수는 뺀 수를 return 하도록 solution 함수를 완성해주세요.</p>
<h4><strong>제한사항</strong></h4>
<ul>
<li>1 ≤ <code class="inline">left</code> ≤ <code class="inline">right</code> ≤ 1,000</li>

</ul>
<h4>입출력 예</h4>
<figure><table class="tg">
<thead>
<tr><th>left</th><th>right</th><th>result</th></tr></thead>
<tbody><tr><td>13</td><td>17</td><td>43</td></tr><tr><td>24</td><td>27</td><td>52</td></tr></tbody>
</table></figure>
<h4>입출력 예에 대한 설명</h4>
<ul>
<li><p><strong>입출력 예 #1</strong></p>
<ul>
<li>다음 표는 13부터 17까지의 수들의 약수를 모두 나타낸 것입니다.</li>

</ul>
<figure><table class="tg">
<thead>
<tr><th>수</th><th>약수</th><th>약수의 개수</th></tr></thead>
<tbody><tr><td>13</td><td>1, 13</td><td>2</td></tr><tr><td>14</td><td>1, 2, 7, 14</td><td>4</td></tr><tr><td>15</td><td>1, 3, 5, 15</td><td>4</td></tr><tr><td>16</td><td>1, 2, 4, 8, 16</td><td>5</td></tr><tr><td>17</td><td>1, 17</td><td>2</td></tr></tbody>
</table></figure>
<ul>
<li>따라서, 13 + 14 + 15 - 16 + 17 = 43을 return 해야 합니다.</li>

</ul>
</li>
<li><p><strong>입출력 예 #2</strong></p>
<ul>
<li>다음 표는 24부터 27까지의 수들의 약수를 모두 나타낸 것입니다.</li>

</ul>
<figure><table class="tg">
<thead>
<tr><th>수</th><th>약수</th><th>약수의 개수</th></tr></thead>
<tbody><tr><td>24</td><td>1, 2, 3, 4, 6, 8, 12, 24</td><td>8</td></tr><tr><td>25</td><td>1, 5, 25</td><td>3</td></tr><tr><td>26</td><td>1, 2, 13, 26</td><td>4</td></tr><tr><td>27</td><td>1, 3, 9, 27</td><td>4</td></tr></tbody>
</table></figure>
<ul>
<li>따라서, 24 - 25 + 26 + 27 = 52를 return 해야 합니다.</li>

</ul>
</li>

</ul>
<h4>풀이</h4>
<pre class="line-numbers"><code class='language-python' lang='python'>def solution(left, right):
    answer = 0
    for i in range(left, right+1):
        divisors_list = []
        for j in range(1, i+1):
            if i % j == 0:
                divisors_list.append(j)
        if len(divisors_list) % 2 == 0:
            answer += i
        else:
            answer -= i
    return answer

</code></pre>
<h4>설명</h4>
<p>나는 그냥 설명에서 나온 그대로 코딩했는데 다른 사람의 풀이를 보니 제곱수(1, 4, 9, 16...)의 성질을 이용한 사람들이 많았다. &quot;제곱수의 약수의 개수는 홀수이고 제곱수가 아닌 경우는 짝수&quot;라는 성질이 있는데 이걸 이용해 약수의 개수를 구하는 단계에서 해당 수가 제곱수인지 아닌지 검사하는 로직을 통해 더하거나 빼는 방식이 있다.</p>
<p>&nbsp;</p>

<h4>[프로그래머스/Level2/파이썬3(python3)] 최솟값 만들기</h4>
<h4>문제</h4>
<p>길이가 같은 배열 A, B 두개가 있습니다. 각 배열은 자연수로 이루어져 있습니다.
배열 A, B에서 각각 한 개의 숫자를 뽑아 두 수를 곱합니다. 이러한 과정을 배열의 길이만큼 반복하며, 두 수를 곱한 값을 누적하여 더합니다. 이때 최종적으로 누적된 값이 최소가 되도록 만드는 것이 목표입니다. (단, 각 배열에서 k번째 숫자를 뽑았다면 다음에 k번째 숫자는 다시 뽑을 수 없습니다.)</p>
<p>예를 들어 A = <code class="inline">[1, 4, 2]</code> , B = <code class="inline">[5, 4, 4]</code> 라면</p>
<ul>
<li>A에서 첫번째 숫자인 1, B에서 두번째 숫자인 5를 뽑아 곱하여 더합니다. (누적된 값 : 0 + 5(1x5) = 5)</li>
<li>A에서 두번째 숫자인 4, B에서 세번째 숫자인 4를 뽑아 곱하여 더합니다. (누적된 값 : 5 + 16(4x4) = 21)</li>
<li>A에서 세번째 숫자인 2, B에서 첫번째 숫자인 4를 뽑아 곱하여 더합니다. (누적된 값 : 21 + 8(2x4) = 29)</li>

</ul>
<p>즉, 이 경우가 최소가 되므로 <strong>29</strong>를 return 합니다.</p>
<p>배열 A, B가 주어질 때 최종적으로 누적된 최솟값을 return 하는 solution 함수를 완성해 주세요.</p>
<h4>제한사항</h4>
<ul>
<li>배열 A, B의 크기 : 1,000 이하의 자연수</li>
<li>배열 A, B의 원소의 크기 : 1,000 이하의 자연수</li>

</ul>
<h4>입출력 예</h4>
<figure><table>
<thead>
<tr><th>A</th><th>B</th><th>answer</th></tr></thead>
<tbody><tr><td>[1, 4, 2]</td><td>[5, 4, 4]</td><td>29</td></tr><tr><td>[1,2]</td><td>[3,4]</td><td>10</td></tr></tbody>
</table></figure>
<h4>입출력 예 설명</h4>
<p><strong>예제 #1</strong>  </p>
<p>문제의 예시와 같습니다.</p>
<p><strong>예제 #2</strong>  </p>
<p>A에서 첫번째 숫자인 1, B에서 두번째 숫자인 4를 뽑아 곱하여 더합니다. (누적된 값 : 4) 다음, A에서 두번째 숫자인 2, B에서 첫번째 숫자인 3을 뽑아 곱하여 더합니다. (누적된 값 : 4 + 6 = 10)<br/>이 경우가 최소이므로 10을 return 합니다.</p>
<h4>풀이</h4>
<pre class="line-numbers"><code class='language-python' lang='python'>def solution(A, B):
    return sum(a*b for a, b in zip(sorted(A), sorted(B, reverse=True)))
</code></pre>
<h4>설명</h4>
<p>이미 예제에서 너무나 많은 힌트를 줬다. 각각 작은수와 큰수끼리 곱해서 나아가면 최솟값이 된다는 사실을 말이다. A는 오름차순, B는 내림차순으로 정렬한 뒤에 파이썬의 꽃, 컴프리헨션으로 묶은 뒤 sum함수로 해결하였다. 풀이를 보니까 이렇게 푼 사람들이 꽤나 많아서 놀랐다. 역시!</p>
